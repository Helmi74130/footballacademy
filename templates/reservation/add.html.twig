{% extends 'base.html.twig' %}

{% block title %}Hello ReservationController!{% endblock %}

{% block body %}

    <h1>Réserver un créneau</h1>

    {% for message in app.flashes('success') %}
        <div class="alert alert-success">{{ message }}</div>
    {% endfor %}

    {% for message in app.flashes('danger') %}
        <div class="alert alert-danger">{{ message }}</div>
    {% endfor %}


    <main class="container">
        <section class="row justify-content-center">
            {{ form_start(reservationForm, { 'attr': {'class': 'col-8 bg-light p-5 mt-2'} }) }}

            <div class="row justify-content-around mt-3">
                <div class="col-6">
                    <p class="ms-2 mb-1 fs-5">{{ form_label(reservationForm.date) }}</p>
                    <div class="input-group input-group-lg">
                        <span class="input-group-text bg-dark text-light bg-dark text-light">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-calendar2-date" viewBox="0 0 16 16">
                              <path d="M6.445 12.688V7.354h-.633A12.6 12.6 0 0 0 4.5 8.16v.695c.375-.257.969-.62 1.258-.777h.012v4.61h.675zm1.188-1.305c.047.64.594 1.406 1.703 1.406 1.258 0 2-1.066 2-2.871 0-1.934-.781-2.668-1.953-2.668-.926 0-1.797.672-1.797 1.809 0 1.16.824 1.77 1.676 1.77.746 0 1.23-.376 1.383-.79h.027c-.004 1.316-.461 2.164-1.305 2.164-.664 0-1.008-.45-1.05-.82h-.684zm2.953-2.317c0 .696-.559 1.18-1.184 1.18-.601 0-1.144-.383-1.144-1.2 0-.823.582-1.21 1.168-1.21.633 0 1.16.398 1.16 1.23z"/>
                              <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM2 2a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H2z"/>
                              <path d="M2.5 4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V4z"/>
                            </svg>
                        </span>
                        {{ form_widget(reservationForm.date) }}
                    </div>
                    <div class="text-danger">
                        <small>{{ form_errors(reservationForm.date) }}</small>
                    </div>
                </div>
                <div class="col-6">
                    <p class="ms-2 mb-1 fs-5">{{ form_label(reservationForm.hour) }}</p>
                    <div class="input-group input-group-lg">
                        <span class="input-group-text bg-dark text-light">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-alarm" viewBox="0 0 16 16">
                              <path d="M8.5 5.5a.5.5 0 0 0-1 0v3.362l-1.429 2.38a.5.5 0 1 0 .858.515l1.5-2.5A.5.5 0 0 0 8.5 9V5.5z"/>
                              <path d="M6.5 0a.5.5 0 0 0 0 1H7v1.07a7.001 7.001 0 0 0-3.273 12.474l-.602.602a.5.5 0 0 0 .707.708l.746-.746A6.97 6.97 0 0 0 8 16a6.97 6.97 0 0 0 3.422-.892l.746.746a.5.5 0 0 0 .707-.708l-.601-.602A7.001 7.001 0 0 0 9 2.07V1h.5a.5.5 0 0 0 0-1h-3zm1.038 3.018a6.093 6.093 0 0 1 .924 0 6 6 0 1 1-.924 0zM0 3.5c0 .753.333 1.429.86 1.887A8.035 8.035 0 0 1 4.387 1.86 2.5 2.5 0 0 0 0 3.5zM13.5 1c-.753 0-1.429.333-1.887.86a8.035 8.035 0 0 1 3.527 3.527A2.5 2.5 0 0 0 13.5 1z"/>
                            </svg>
                        </span>
                        {#{{ form_widget(reservationForm.hour, { 'attr': {'class': 'form-control'} }) }}#}
                        {{ form_widget(reservationForm.hour) }}
                    </div>
                    <div class="text-danger">
                        <small>{{ form_errors(reservationForm.hour) }}</small>
                    </div>
                </div>
            </div>

            <div class="row justify-content-around mt-3">
                <div class="col-6">
                    <p class="ms-2 mb-1 fs-5">{{ form_label(reservationForm.terrain) }}</p>
                    <div class="input-group input-group-lg">
                        <span class="input-group-text bg-dark text-light">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-pin-map" viewBox="0 0 16 16">
                              <path fill-rule="evenodd" d="M3.1 11.2a.5.5 0 0 1 .4-.2H6a.5.5 0 0 1 0 1H3.75L1.5 15h13l-2.25-3H10a.5.5 0 0 1 0-1h2.5a.5.5 0 0 1 .4.2l3 4a.5.5 0 0 1-.4.8H.5a.5.5 0 0 1-.4-.8l3-4z"/>
                              <path fill-rule="evenodd" d="M8 1a3 3 0 1 0 0 6 3 3 0 0 0 0-6zM4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999z"/>
                            </svg>
                        </span>
                        {{ form_widget(reservationForm.terrain, { 'attr': {'class': 'form-control'} }) }}
                    </div>
                    <div class="text-danger">
                        <small>{{ form_errors(reservationForm.terrain) }}</small>
                    </div>
                </div>
                {#<div class="col-6">
                    <p class="ms-2 mb-1 fs-5">{{ form_label(reservationForm.user) }}</p>
                    <div class="input-group input-group-lg">
                        <span class="input-group-text bg-dark text-light">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-phone" viewBox="0 0 16 16">
                              <path d="M11 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h6zM5 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H5z"/>
                              <path d="M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"/>
                            </svg>
                        </span>
                        {{ form_widget(reservationForm.user, { 'attr': {'class': 'form-control'} }) }}
                    </div>
                    <div class="text-danger">
                        <small>{{ form_errors(reservationForm.user) }}</small>
                    </div>
                </div>#}
            </div>

            <div class="col-6 text-end">
                <button type="submit" class="btn btn-success">Inscription</button>
            </div>

            {{ form_end(reservationForm) }}
        </section>
    </main>

    {% set existingReservations = [] %}
    {% for reservation in timeReservations %}
        {% set existingReservations = existingReservations|merge([{'start': reservation.startplay, 'end': reservation.endplay}]) %}
    {% endfor %}


    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script>

        $(document).ready(function() {
            // you may need to change this code if you are not using Bootstrap Datepicker
            $('.js-datepicker').datepicker({
                format: 'yyyy-mm-dd ',
                weekStart: 1,
                startDate: "-0d",
                endDate: "+3m",
                maxViewMode: 1,
                language: "fr",
                todayBtn: "linked",
                todayHighlight: true,

            }).on("changeDate", function(e) {
                let selectedDate = $(this).datepicker("getDate");
                console.log(selectedDate);
            });

            $('.timepicker').timepicker({
                timeFormat: 'HH:mm',
                interval: 30,
                minTime: '8',
                maxTime: '23:00',
                startTime: '08:00',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });


            let existingReservations = {{ existingReservations|json_encode|raw }};



            function checkAvailability(startTime, endTime) {
                for (let i = 0; i < existingReservations.length; i++) {
                    let reservationStartTime = new Date(existingReservations[i].start).getTime();
                    let reservationEndTime = new Date(existingReservations[i].end).getTime();
                    if (startTime >= reservationStartTime && startTime < reservationEndTime ||
                        endTime > reservationStartTime && endTime <= reservationEndTime ||
                        startTime <= reservationStartTime && endTime >= reservationEndTime) {
                        return false;
                    }
                }
                return true;
            }



            // Example usage
            var startTime = new Date("2023-02-01T10:00:00").getTime();
            var endTime = new Date("2023-02-01T12:00:00").getTime();
            if (checkAvailability(startTime, endTime)) {
                console.log("Créneau horaire disponible");
            } else {
                console.log("Créneau horaire non disponible");
            }

        });


    </script>
{% endblock %}
